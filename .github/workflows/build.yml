name: Junction-VIII-Catalogs-Build

run-name: 1.0.0.${{ github.run_number }}

on:
  pull_request:
    types: [closed]

env:
  _IS_BUILD_CANARY: false
  _IS_GITHUB_RELEASE: false
  _RELEASE_NAME: JunctionVIIICatalogs
  _RELEASE_VERSION: v0
  _BUILD_BRANCH: "${{ github.ref }}"
  _BUILD_VERSION: "1.0.0.${{ github.run_number }}"
  GIT_REDIRECT_STDERR: 2>&1

jobs:
  CD:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest 
    timeout-minutes: 1440
    strategy:
      max-parallel: 1
    steps:
      - name: Set Git Config
        run: |
          git config --global core.autocrlf false
          git config --global core.filemode false
          git config --global core.longpaths true
      - name: Checkout
        uses: actions/checkout@v4.1.0
      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils
      - name: Set execute permission for prepare.sh
        run: chmod +x .github/workflows/prepare.sh
      - name: Prepare Env
        run: .github/workflows/prepare.sh
        shell: bash
      - name: Combine XML files
        run: |
          echo '<?xml version="1.0"?>' > tsunamods.xml
          echo '<Catalog Name="Tsunamods Catalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">' >> tsunamods.xml
          echo '<Mods>' >> tsunamods.xml
          for file in mods/**/*.xml; do
            xmllint --format "$file" | sed '1d' >> tsunamods.xml
          done
          echo '</Mods>' >> tsunamods.xml
          echo '</Catalog>' >> tsunamods.xml
      - name: Publish Canary Release
        uses: ncipollo/release-action@v1
        if: env._IS_GITHUB_RELEASE == 'true' && env._IS_BUILD_CANARY == 'true' && success()
        with:
          artifacts: tsunamods.xml
          allowUpdates: true
          generateReleaseNotes: true
          prerelease: true
          removeArtifacts: true
          tag: canary
          name: "${{ env._RELEASE_NAME }}-${{ env._RELEASE_VERSION }}"
          body: | 
           testing
      - name: Publish Stable release
        uses: ncipollo/release-action@v1
        if: env._IS_GITHUB_RELEASE == 'true' && env._IS_BUILD_CANARY == 'false' && success()
        with:
          artifacts: tsunamods.xml
          generateReleaseNotes: true
          makeLatest: true
          removeArtifacts: true
          name: "${{ env._RELEASE_NAME }}-${{ env._RELEASE_VERSION }}"
